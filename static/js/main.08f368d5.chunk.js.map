{"version":3,"sources":["component/Task.tsx","component/TaskList.tsx","component/InputForm.tsx","App.tsx","reportWebVitals.ts","index.tsx","component/task.module.scss"],"names":["Task","props","useState","isEditable","changeEditable","className","styles","wrap","form","onSubmit","e","preventDefault","task","target","elements","value","onSubmitEdit","index","type","name","formInput","defaultValue","label","formBtn","btns","btn","onClick","clickDelete","TaskList","text","list","length","map","id","InputForm","onFormSubmit","App","setId","tasks","setTasks","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iPAyEeA,EA/DF,SAACC,GAAqB,IAAD,EACKC,oBAAkB,GADvB,mBACzBC,EADyB,KACbC,EADa,KAgBhC,OAAKD,EAwBD,qBAAKE,UAAWC,IAAOC,KAAvB,SACE,uBACEF,UAAWC,IAAOE,KAClBC,SAxCiB,SAACC,GACxBA,EAAEC,iBADiC,IAE3BC,EAASF,EAAEG,OAAOC,SAAlBF,KAEJA,EAAKG,QAETd,EAAMe,aAAaf,EAAMgB,MAAOL,EAAKG,OACrCX,GAAe,KA+BX,UAIE,uBACEc,KAAK,OACLC,KAAK,OACLd,UAAWC,IAAOc,UAClBC,aAAcpB,EAAMqB,QAEtB,wBACEjB,UAAWC,IAAOiB,QAClBL,KAAK,SAFP,+BAjCJ,sBAAKb,UAAWC,IAAOC,KAAvB,UACE,4BAAIN,EAAMqB,QACV,sBAAKjB,UAAWC,IAAOkB,KAAvB,UACE,wBACEN,KAAK,SACLb,UAAWC,IAAOmB,IAClBC,QAAS,kBAAMtB,GAAe,IAHhC,0BAOA,wBACEc,KAAK,SACLb,UAAWC,IAAOmB,IAClBC,QAnBgB,SAAChB,GACzBT,EAAM0B,YAAY1B,EAAMgB,QAelB,iCCEKW,EAjCE,SAAC3B,GAChB,IAAMe,EAAe,SAACC,EAAeY,GACnC5B,EAAMe,aAAaC,EAAOY,IAGtBF,EAAc,SAACV,GACnBhB,EAAM0B,YAAYV,IAGpB,OAA0B,IAAtBhB,EAAM6B,KAAKC,OAEX,uFAKF,qBAAK1B,UAAU,WAAf,SACGJ,EAAM6B,KAAKE,KAAI,SAACpB,EAAgBK,GAC7B,OACI,qBAAmBZ,UAAU,cAA7B,SACI,cAAC,EAAD,CACEY,MAAOA,EACPK,MAAOV,EAAKU,MACZN,aAAcA,EACdW,YAAaA,KALTf,EAAKqB,UCHdC,EAnBG,SAACjC,GAWjB,OACE,uBAAMQ,SAXa,SAACC,GACpBA,EAAEC,iBAD6B,IAEvBC,EAASF,EAAEG,OAAOC,SAAlBF,KAEJA,EAAKG,QAETd,EAAMkC,aAAavB,EAAKG,OACxBH,EAAKG,MAAQ,KAIb,UACE,uBAAOG,KAAK,OAAOC,KAAK,SACxB,wBAAQD,KAAK,SAAb,8B,MC4BSkB,MAzCf,WAAgB,IAAD,EACOlC,mBAAiB,GADxB,mBACN+B,EADM,KACFI,EADE,OAEanC,mBAAc,IAF3B,mBAENoC,EAFM,KAECC,EAFD,KA2Bb,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,CACE8B,aA1BY,SAACb,GACjBe,EAAMJ,EAAK,GAEX,IAAMrB,EAAO,CACXqB,GAAIA,EACJX,MAAOA,GAGTiB,EAAS,GAAD,mBAAKD,GAAL,CAAY1B,QAoBlB,cAAC,EAAD,CACEkB,KAAMQ,EACNtB,aAnBW,SAACC,EAAeY,GAC/BS,EAAMrB,GAAOK,MAAQO,EAErBU,EAAS,YAAID,KAiBTX,YAda,SAACV,GAClBqB,EAAME,OAAOvB,EAAO,GAEpBsB,EAAS,YAAID,WCfFG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,KAAO,mBAAmB,QAAU,sBAAsB,UAAY,2B","file":"static/js/main.08f368d5.chunk.js","sourcesContent":["import { useState } from 'react'\nimport styles from \"./task.module.scss\";\n\ninterface TaskType {\n  index: number\n  label: string\n  onSubmitEdit: Function\n  clickDelete: Function\n}\n\nconst Task = (props: TaskType) => {\n  const [isEditable, changeEditable] = useState<boolean>(false)\n\n  const handleSubmitEdit = (e: any) => {\n    e.preventDefault()\n    const { task } = e.target.elements\n\n    if(!task.value) return\n\n    props.onSubmitEdit(props.index, task.value)\n    changeEditable(false)\n  }\n  const handleClickDelete = (e: any) => {\n    props.clickDelete(props.index)\n  }\n\n  if (!isEditable) {\n    return (\n      <div className={styles.wrap}>\n        <p>{props.label}</p>\n        <div className={styles.btns}>\n          <button\n            type=\"button\"\n            className={styles.btn}\n            onClick={() => changeEditable(true)}\n          >\n            編集\n          </button>\n          <button\n            type=\"button\"\n            className={styles.btn}\n            onClick={handleClickDelete}\n          >\n            削除\n          </button>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className={styles.wrap}>\n        <form\n          className={styles.form}\n          onSubmit={handleSubmitEdit}\n        >\n          <input\n            type=\"text\"\n            name=\"task\"\n            className={styles.formInput}\n            defaultValue={props.label}\n          />\n          <button\n            className={styles.formBtn}\n            type=\"submit\"\n          >\n            決定\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Task\n","import Task from './Task'\n\ninterface TaskType {\n  id: number\n  label: string\n}\n\nconst TaskList = (props: any) => {\n  const onSubmitEdit = (index: number, text: string) => {\n    props.onSubmitEdit(index, text)\n  }\n\n  const clickDelete = (index: number) => {\n    props.clickDelete(index)\n  }\n\n  if (props.list.length === 0) {\n    return (\n      <p>タスクはありません</p>\n    )\n  }\n\n  return (\n    <div className=\"TaskList\">\n      {props.list.map((task: TaskType, index: number) => {\n          return (\n              <div key={task.id} className=\"column is-3\">\n                  <Task\n                    index={index}\n                    label={task.label}\n                    onSubmitEdit={onSubmitEdit}\n                    clickDelete={clickDelete}\n                  />\n              </div>\n          )\n      })}\n    </div>\n  );\n}\n\nexport default TaskList\n","interface InputFormType {\n  onFormSubmit: Function\n}\n\nconst InputForm = (props: InputFormType) => {\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    const { task } = e.target.elements\n\n    if(!task.value) return\n\n    props.onFormSubmit(task.value)\n    task.value = ''\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"task\" />\n      <button type=\"submit\">作成</button>\n    </form>\n  );\n}\n\nexport default InputForm\n","import { useState } from 'react'\nimport TaskList from './component/TaskList'\nimport InputForm from './component/InputForm';\nimport './App.css';\n\nfunction App() {\n  const [id, setId] = useState<number>(0)\n  const [tasks, setTasks] = useState<any>([])\n\n  const crateTask = (label: string) => {\n    setId(id + 1)\n\n    const task = {\n      id: id,\n      label: label\n    }\n\n    setTasks([...tasks, task])\n  }\n\n  const editTask = (index: number, text: string) => {\n    tasks[index].label = text\n\n    setTasks([...tasks])\n  }\n\n  const deleteTask = (index: number) => {\n    tasks.splice(index, 1)\n\n    setTasks([...tasks])\n  }\n\n  return (\n    <div className=\"App\">\n      <InputForm\n        onFormSubmit={crateTask}\n      />\n      <TaskList\n        list={tasks}\n        onSubmitEdit={editTask}\n        clickDelete={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"task_wrap__3uTX9\",\"btns\":\"task_btns__1d44E\",\"btn\":\"task_btn__1VwDt\",\"form\":\"task_form__2nAFR\",\"formBtn\":\"task_formBtn__1xw2J\",\"formInput\":\"task_formInput__18jNT\"};"],"sourceRoot":""}